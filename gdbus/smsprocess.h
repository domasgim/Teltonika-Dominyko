/*
 * Generated by gdbus-codegen 2.48.2. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __SMSPROCESS_H__
#define __SMSPROCESS_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.smsprocess.GDBUS */

#define SMSPROCESS_TYPE_GDBUS (smsprocess_gdbus_get_type ())
#define SMSPROCESS_GDBUS(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SMSPROCESS_TYPE_GDBUS, SMSProcessGDBUS))
#define SMSPROCESS_IS_GDBUS(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SMSPROCESS_TYPE_GDBUS))
#define SMSPROCESS_GDBUS_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), SMSPROCESS_TYPE_GDBUS, SMSProcessGDBUSIface))

struct _SMSProcessGDBUS;
typedef struct _SMSProcessGDBUS SMSProcessGDBUS;
typedef struct _SMSProcessGDBUSIface SMSProcessGDBUSIface;

struct _SMSProcessGDBUSIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_send_sms_information) (
    SMSProcessGDBUS *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_phone_number,
    const gchar *arg_SMS_message);

};

GType smsprocess_gdbus_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *smsprocess_gdbus_interface_info (void);
guint smsprocess_gdbus_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void smsprocess_gdbus_complete_send_sms_information (
    SMSProcessGDBUS *object,
    GDBusMethodInvocation *invocation,
    const gchar *response);



/* D-Bus method calls: */
void smsprocess_gdbus_call_send_sms_information (
    SMSProcessGDBUS *proxy,
    const gchar *arg_phone_number,
    const gchar *arg_SMS_message,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean smsprocess_gdbus_call_send_sms_information_finish (
    SMSProcessGDBUS *proxy,
    gchar **out_response,
    GAsyncResult *res,
    GError **error);

gboolean smsprocess_gdbus_call_send_sms_information_sync (
    SMSProcessGDBUS *proxy,
    const gchar *arg_phone_number,
    const gchar *arg_SMS_message,
    gchar **out_response,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define SMSPROCESS_TYPE_GDBUS_PROXY (smsprocess_gdbus_proxy_get_type ())
#define SMSPROCESS_GDBUS_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SMSPROCESS_TYPE_GDBUS_PROXY, SMSProcessGDBUSProxy))
#define SMSPROCESS_GDBUS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SMSPROCESS_TYPE_GDBUS_PROXY, SMSProcessGDBUSProxyClass))
#define SMSPROCESS_GDBUS_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SMSPROCESS_TYPE_GDBUS_PROXY, SMSProcessGDBUSProxyClass))
#define SMSPROCESS_IS_GDBUS_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SMSPROCESS_TYPE_GDBUS_PROXY))
#define SMSPROCESS_IS_GDBUS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SMSPROCESS_TYPE_GDBUS_PROXY))

typedef struct _SMSProcessGDBUSProxy SMSProcessGDBUSProxy;
typedef struct _SMSProcessGDBUSProxyClass SMSProcessGDBUSProxyClass;
typedef struct _SMSProcessGDBUSProxyPrivate SMSProcessGDBUSProxyPrivate;

struct _SMSProcessGDBUSProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  SMSProcessGDBUSProxyPrivate *priv;
};

struct _SMSProcessGDBUSProxyClass
{
  GDBusProxyClass parent_class;
};

GType smsprocess_gdbus_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SMSProcessGDBUSProxy, g_object_unref)
#endif

void smsprocess_gdbus_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SMSProcessGDBUS *smsprocess_gdbus_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
SMSProcessGDBUS *smsprocess_gdbus_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void smsprocess_gdbus_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SMSProcessGDBUS *smsprocess_gdbus_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
SMSProcessGDBUS *smsprocess_gdbus_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define SMSPROCESS_TYPE_GDBUS_SKELETON (smsprocess_gdbus_skeleton_get_type ())
#define SMSPROCESS_GDBUS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SMSPROCESS_TYPE_GDBUS_SKELETON, SMSProcessGDBUSSkeleton))
#define SMSPROCESS_GDBUS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SMSPROCESS_TYPE_GDBUS_SKELETON, SMSProcessGDBUSSkeletonClass))
#define SMSPROCESS_GDBUS_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SMSPROCESS_TYPE_GDBUS_SKELETON, SMSProcessGDBUSSkeletonClass))
#define SMSPROCESS_IS_GDBUS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SMSPROCESS_TYPE_GDBUS_SKELETON))
#define SMSPROCESS_IS_GDBUS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SMSPROCESS_TYPE_GDBUS_SKELETON))

typedef struct _SMSProcessGDBUSSkeleton SMSProcessGDBUSSkeleton;
typedef struct _SMSProcessGDBUSSkeletonClass SMSProcessGDBUSSkeletonClass;
typedef struct _SMSProcessGDBUSSkeletonPrivate SMSProcessGDBUSSkeletonPrivate;

struct _SMSProcessGDBUSSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  SMSProcessGDBUSSkeletonPrivate *priv;
};

struct _SMSProcessGDBUSSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType smsprocess_gdbus_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SMSProcessGDBUSSkeleton, g_object_unref)
#endif

SMSProcessGDBUS *smsprocess_gdbus_skeleton_new (void);


G_END_DECLS

#endif /* __SMSPROCESS_H__ */
